--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.2) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (3==v0) then v13=select;v14=unpack or table.unpack;v15=tonumber;v16=nil;v0=4;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==2) then v9=math.ldexp;v10=getfenv or function()return _ENV;end;v11=setmetatable;v12=pcall;v0=3;end if (v0==4) then v16=function(v22,v23,...)local v27=0;local v28;local v29;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;while true do if (v27==4) then v34=function()local v48=66 -(5 + 61);local v49;local v50;local v51;local v52;local v53;local v54;while true do if (v48==(1 + 0)) then v51=294 -(91 + 202);v52=(v30(v50,(1953 -(1021 + 931)) + (0 -0),45 -(18 + 7)) * ((514 -(364 + 148))^(999 -((572 -409) + 804)))) + v49;v48=3 -1;end if (v48==(3 + 0)) then if (v53==(0 -0)) then if (v52==(0 + 0)) then return v54 * (0 + 0);else v53=1705 -(237 + 1467);v51=(1052 -(164 + 888)) -0;end elseif (v53==(134 + 1913)) then return ((v52==(0 -0)) and (v54 * (((1268 -(418 + 748)) -(21 + 80))/(0 -0)))) or (v54 * NaN);end return v9(v54,v53-(391 + 632)) * (v51 + (v52/((1925 -(301 + 1373 + 249))^(323 -((605 -(340 + 257)) + 263)))));end if (v48==((619 -(52 + 566)) + 1)) then v53=v30(v50,19 + 2,49 -18);v54=((v30(v50,32)==(3 -2)) and  -(3 -2)) or ((78 + 1901) -(1974 + 4));v48=1 + 2;end if (v48==(0 -0)) then v49=v33();v50=v33();v48=1;end end end;v35=nil;v35=function(v40)local v55=0;local v56;local v57;while true do if (v55==(3 -1)) then v57={};for v90=73 -(67 + 5), #v56 do v57[v90]=v3(v2(v4(v56,v90,v90)));end v55=14 -11;end if (v55==(1659 -(1036 + 623))) then v56=nil;if  not v40 then local v94=1701 -(884 + 817);while true do if (v94==(0 -0)) then v40=v33();if (v40==(1969 -(1927 + 42))) then return "";end break;end end end v55=1;end if (v55==(1 + 0)) then v56=v4(v22,v28,(v28 + v40) -(1 -0));v28=v28 + v40;v55=5 -3;end if (v55==(1 + 2)) then return v7(v57);end end end;v27=5;end if (v27==7) then v39=function(v41,v42,v43)local v58=v41[1];local v59=v41[2];local v60=v41[3];return function(...)local v78=0;local v79;local v80;local v81;local v82;local v83;while true do if (v78==2) then v83=nil;v83=function()local v95=v58;local v96=v59;local v97=v60;local v98=v37;local v99={};local v100={};local v101={};for v105=0,v82 do if (((1256 -(43 + 844))<=3934) and (v105>=v97)) then v99[v105-v97]=v81[v105 + 1 + 0];else v101[v105]=v81[v105 + (345 -(237 + 107))];end end local v102=(v82-v97) + (1326 -(1195 + 130)) + 0;local v103;local v104;while true do local v106=0 -0;local v107;while true do if ((v106==(0 -0)) or ((6350 -1431)>(2505 + 2488))) then v107=(0 -0) -0;while true do if ((v107==(1232 -(196 + 336 + 699))) or ((2608 + 1271)==(2857 -(160 + 1671)))) then if ((v104<=(4 + 14)) or ((1413 + 537)==(1270 + 883))) then if ((v104<=(15 -7)) or ((11690 -7672)==(379 + 3594))) then if ((v104<=(888 -(648 + 237))) or ((1092 + 3352)<=(1636 -(128 + 1062)))) then if (((556 + 3878)>=(7138 -5413)) and (v104<=(2 -1))) then if ((v104>(0 + 0)) or (((4700 -(1118 + 558)) + 622)<(1033 -(183 + 23)))) then v101[v103[1246 -(1010 + 234)]]=v103[3 + 0];elseif (((8023 -4953)<=(5666 -(214 + (1384 -909)))) and v101[v103[2]]) then v79=v79 + (2 -(4 -3));else v79=v103[3];end elseif ((v104==(85 -(55 + 18 + 10))) or ((616 + 3107)==(5180 -(439 + 454)))) then v101[v103[4 -2]]=v101[v103[1 + 2]][v103[1783 -(23 + 96 + 1660)]];else local v151=0 + 0;local v152;local v153;local v154;local v155;local v156;local v157;while true do if (((3 -1)==v151) or ((1665 + 1444)==(3864 -2006))) then v156=nil;v157=nil;v151=3 + 0;end if ((v151==(1321 -(833 + 485))) or ((2283 -(816 + 1089))>=(4956 -(771 + 229)))) then while true do if ((v152==(1144 -(1026 + 118))) or ((8625 -6144)>=(17002 -12315))) then local v268=0 + 0;while true do if (((142 + 320)<=(958 + 796)) and (v268==(1 -0))) then v152=1 -0;break;end if ((((1202 -764) + 65)<=(8390 -(6063 -2325))) and (v268==(0 -0))) then v153=v103[7 -5];v154=v103[419 -(15 + 400)];v268=409 -(74 + 334);end end end if (((2 + 0)==v152) or (((7435 -3763) -2544)>=(10690 -6786))) then for v285=1 -0,v154 do v101[v155 + v285]=v156[v285];end v157=v156[1 + 0 + 0];v152=3 + 0;end if ((v152==(2 -1)) or ((3387 -(357 + 2325))>=(10634 -6847))) then local v270=1783 -(951 + 832);while true do if (((3671 -(187 + 716))<(919 + 3764)) and (v270==(0 -(0 -0)))) then v155=v153 + 1 + 1;v156={v101[v153](v101[v153 + (1280 -(164 + 585 + 455 + 75))],v101[v155])};v270=1 + 0 + 0;end if ((3832>=(4411 -(1045 + 5 + 18))) and ((1 + 0)==v270)) then v152=5 -(2 + 1);break;end end end if (((3512 -(103 + 918))>(36 + 706)) and (v152==(4 -1))) then if ((4967==(12442 -7475)) and v157) then local v299=920 -(166 + 754);local v300;while true do if ((((1107 -849) -(80 + 178))==v299) or ((3664 + 466)<(4852 -2713))) then v300=0 + 0;while true do if ((((1145 + 1646) -(1131 + 285))==(609 + 766)) and (v300==(268 -(51 + 217)))) then v101[v155]=v157;v79=v103[1 + 2];break;end end break;end end else v79=v79 + 1 + 0;end break;end end break;end if (((329 + 23)<(4631 -((806 -419) + 475))) and (v151==(1 -0))) then v154=nil;v155=nil;v151=859 -(602 + 255);end if ((v151==(0 + 0)) or ((6705 -(1288 + 646))<(15868 -11428))) then v152=0 + 0;v153=nil;v151=1635 -(295 + (4187 -2848));end end end elseif ((v104<=(14 -9)) or ((2266 -((2168 -1288) + 1034))>=(2719 + 1205))) then if (((3189 -(278 + 52))==(196 + 55 + 2608)) and (v104==((91 -(78 + 11)) + 2))) then if ((v101[v103[2 + 0]]==v103[4 + (0 -0)]) or ((2670 -(174 + 139))<(3799 -1818))) then v79=v79 + (3 -2);else v79=v103[10 -7];end else for v200=v103[2 + 0],v103[5 -2] do v101[v200]=nil;end end elseif (((1759 + 685)==(3799 -(873 + 482))) and (v104<=(992 -(978 + 8)))) then local v158=0 -0;local v159;local v160;while true do if ((v158==(0 -0)) or (1394>(3509 -(507 + (2452 -1415))))) then v159=895 -(547 + (839 -491));v160=nil;v158=1 + 0;end if ((v158==(1 -0)) or ((2203 + 559)>(5726 -1911))) then while true do if (((1784 -(1071 + 713))==v159) or ((655 + 272)>=(4556 -1858))) then v160=v103[1 + 1];v101[v160](v14(v101,v160 + (1143 -(1132 + 10)),v103[3]));break;end end break;end end elseif ((v104>(1047 -(31 + 1009))) or ((2533 + 647)<(7962 -5145))) then local v210=0 -0;local v211;local v212;local v213;local v214;local v215;local v216;while true do if ((v210==(1 + 0)) or ((3212 -((94 -25) + 62))<(2489 -(986 + 148)))) then v213=nil;v214=nil;v210=2 -0;end if (((2 + 0)==v210) or ((1738 -(1146 + 49))==(1823 -875))) then v215=nil;v216=nil;v210=6 -3;end if ((v210==0) or ((3492 -(111 + (181 -118)))>=(11319 -7050))) then v211=1983 -(276 + 1707);v212=nil;v210=2 -1;end if (((2 + 1)==v210) or ((331 -(221 -78))>=(979 + 1698))) then while true do if (((4912 -(153 + 1352))>(1086 -655)) and (v211==(2 -1))) then local v301=0 -0;while true do if (((6461 -1595)>=(888 -514)) and (v301==((1 -0) -0))) then v211=682 -(294 + 386);break;end if (((373 -(238 + (310 -175)))==v301) or ((3285 -(169 + 472))<=(92 + 28))) then v214=nil;v215=nil;v301=1 -(0 -0);end end end if ((v211==(1758 -(510 + 1246))) or ((2420 + 429)==(6330 -(1110 + 365)))) then v216=nil;while true do if ((v212==(153 -(138 + 15))) or ((738 + 784 + 3149)<1669)) then local v333=1903 -(705 + 1198);local v334;while true do if ((v333==(51 -(21 + 30))) or ((14148 -9857)>((8349 -(594 + 1277)) -(356 + 1289)))) then v334=0;while true do if (((141 + 1668)<=(3385 + (3105 -1972))) and (v334==(0 -0))) then local v364=0 + (0 -0);while true do if ((v364==(0 -0)) or (((18242 -(115 + 853)) -12842)>=(1821 + 3165))) then v213=v103[1 + 1];v214,v215=v98(v101[v213](v101[v213 + (2 -1)]));v364=544 -((2105 -(1221 + 411)) + 70);end if (((511 + 1102)<=(4695 -1754)) and (v364==1)) then v334=1 + 0;break;end end end if ((v334==((508 + 316) -(665 + 158))) or ((837 + 76)>=4810)) then v212=1 -(0 + 0);break;end end break;end end end if ((v212==((3738 -2283) -(335 + 1119))) or ((4181 -(1150 + 1967))>(585 + 1533))) then local v335=378 -(373 + (1593 -(1138 + 450)));local v336;while true do if ((((3336 -(888 + 868)) + 2393)==(2338 + 1635)) and (v335==(1244 -(529 + 715)))) then v336=0 + 0;while true do if ((v336==(0 -0)) or ((14372 -11342)>((14169 -9459) -(57 + 68)))) then local v365=1639 -(68 + (2909 -1338));while true do if ((((1 + 0) -0)==v365) or ((816 + 2120)>=(4367 -(36 + 361)))) then v336=1 -0;break;end if (((2549 -464)==(6416 -4331)) and (v365==(1640 -(293 + 1347)))) then v80=(v215 + v213) -(1490 -(1374 + 115));v216=0 + 0;v365=1 + 0;end end end if (((543 + 252)<=(2533 -(1598 + 132))) and (v336==(650 -(271 + 378)))) then v212=6 -4;break;end end break;end end end if ((v212==(1 + 1)) or ((1589 + 740)==3260)) then for v345=v213,v80 do local v346=0 -0;local v347;local v348;while true do if (((2637 -(562 + 105))<2770) and (v346==(1937 -(278 + 208 + 1450)))) then while true do if ((v347==(0 + 0)) or ((3355 -2432)>=((1342 + 3532) -2211))) then v348=983 -(855 + 128);while true do if (((485 + 712)<=3140) and (v348==(0 -0))) then v216=v216 + (1 -0);v101[v345]=v214[v216];break;end end break;end end break;end if (((3642 -2024)<(10172 -5920)) and (v346==((0 -0) -(0 + 0)))) then v347=0 + 0;v348=nil;v346=1 + 0;end end end break;end end break;end if (((0 + 0)==v211) or ((1215 + 3380)<=(1346 + (1913 -1348)))) then local v302=0 + 0;while true do if (((11244 -(22179 -15010))>((29962 -17131) -9588)) and (v302==(1209 -(453 + 756)))) then v212=1890 -(1167 + 723);v213=nil;v302=1 -0;end if ((v302==(1881 -(424 + 1456))) or ((126 -62)>((5439 -(780 + 880)) + 516))) then v211=1;break;end end end end break;end end else local v217=0 + 0;local v218;local v219;local v220;while true do if ((((12038 -7906) -2623)>(293 + 10)) and (v217==(1038 -(955 + 82)))) then v220=nil;while true do if ((v218==(0 + 0)) or ((1847 -906)==(3265 -(371 + 200)))) then local v303=0 + 0;while true do if (((764 -463)<(1846 -(570 + 657))) and ((3 -2)==v303)) then v218=1;break;end if ((v303==(0 -0)) or ((527 + 1195)==(852 -657))) then v219=0 -0;v220=nil;v303=1165 -(224 + 940);end end end if (((1803 + 1153)==(3152 -(17 + 13 + 166))) and (v218==(2 -1))) then while true do if (((0 -0)==v219) or ((1633 + 773)==(159 -105))) then v220=v103[1 + 1];do return v14(v101,v220,v220 + v103[2 + 1]);end break;end end break;end end break;end if ((v217==(0 -0)) or ((9544 -6637)>=(11664 -7368))) then v218=738 -(30 + 101 + 607);v219=nil;v217=1;end end end elseif ((v104<=13) or ((6536 -(68 + 1643))<(3022 -(548 + 9)))) then if (((2498 -1601)>=(183 + 126)) and (v104<=(25 -15))) then if (((2542 + (1365 -(465 + 529)))>=(2066 -(284 + 24))) and (v104>(21 -12))) then v101[v103[3 -1]]=v101[v103[5 -2]][v101[v103[227 -(54 + 169)]]];else local v163=(1816 -(1768 + 48)) + 0;local v164;local v165;local v166;local v167;while true do if ((v163==0) or ((1640 -1298)>(3511 + 1213))) then v164=0 -0;v165=nil;v163=693 -(634 + 58);end if ((v163==(2 -0)) or ((265 + 41)>(2116 + 744 + 1966))) then while true do if ((v164==(55 -(12 + 3 + 40))) or ((10598 -6236)==2696)) then local v272=(0 -0) + 0;while true do if ((v272==((1007 -499) -(378 + 130))) or ((1697 + 2219)<=(390 + 1132))) then v165=v103[(4 + 0) -2];v166={v101[v165](v101[v165 + 1 + 0])};v272=(1901 -(189 + 1711)) + 0;end if (((792 + 3829)==(4890 -(118 + 151))) and (v272==((1 -0) -(0 -0)))) then v164=1 + 0;break;end end end if (((7077 -4433)>(578 -115)) and (v164==(1 -0))) then v167=635 -(20 + 615);for v288=v165,v103[2 + 2] do local v289=475 -(176 + 299);local v290;local v291;while true do if (((1 + 0)==v289) or ((3132 -(1044 + 170))<(2720 -((1615 -(24 + 1565)) + 1910)))) then while true do if ((v290==(0 + 0)) or ((3857 -(531 + 893))>(951 + 2305))) then v291=0 + 0;while true do if ((v291==(0 + 0)) or ((116 + 111)>=(8412 -5875))) then v167=v167 + (2 -1);v101[v288]=v166[v167];break;end end break;end end break;end if ((v289==(0 + 0)) or ((1096 + 1517)==(6585 -2068))) then v290=865 -(275 + (2181 -1591));v291=nil;v289=1 + 0;end end end break;end end break;end if (((2114 -1600)<(1234 + (876 -627))) and (v163==(192 -(113 + 78)))) then v166=nil;v167=nil;v163=2 -0;end end end elseif ((v104<=(773 -(80 + 350 + 234 + 98))) or (((3 + 41) -32)>=4410)) then if ((v101[v103[(6 -4) + 0]]~=v103[3 + 1]) or (((160 + 1953) -1299)>=(726 + 606))) then v79=v79 + (4 -3);else v79=v103[4 -1];end elseif ((v104==(34 -22)) or ((756 + 1072)<=(33 + 452))) then local v222=0 -0;local v223;local v224;while true do if (((726 -(21 + 124 + 100))<=(26 + 1343)) and (v222==(2 -1))) then while true do if (((4490 -2751)==(3789 -2050)) and (v223==0)) then v224=v103[363 -((610 -484) + 235)];v101[v224]=v101[v224](v101[v224 + 1 + 0]);break;end end break;end if (((2689 -(997 + 463))<=(2929 -(226 + 174))) and ((0 + 0)==v222)) then local v263=31 -(20 + 11);while true do if (((4961 -(605 + 667))==(14274 -10585)) and (v263==(1 + 0))) then v222=1519 -(488 + 1030);break;end if ((v263==(0 + 0)) or ((965 -331)>=(3677 -1182))) then v223=1957 -(1523 + 434);v224=nil;v263=1 -0;end end end end else v101[v103[2 + (810 -(705 + 105))]]= #v101[v103[1 + 2]];end elseif ((((3162 -(388 + 438)) -(819 + 1076))==(1988 -(1213 + 334))) and (v104<=(13 + (17 -(5 + 10))))) then if ((v104==14) or ((62 -21)>(205 + 363))) then v101[v103[1 + 1]]={};elseif ((v101[v103[5 -(1848 -(1197 + 648))]]<=v103[808 -(384 + 420)]) or ((800 -597)>(8064 -5901))) then v79=v79 + 1;else v79=v103[1729 -(896 + 830)];end elseif (((1759 + 3005)>(3102 -1803)) and (v104<=(735 -(418 + 301)))) then v79=v103[412 -(96 + 313)];elseif ((v104>(36 -19)) or ((1220 -(237 + 14))>=(8656 -4954))) then local v227=0;local v228;local v229;local v230;local v231;while true do if ((v227==((2 -1) + 0)) or ((10155 -5241)<=(3982 -(62 + 18 + 247)))) then v230=nil;v231=nil;v227=(8894 -6939) -(1942 + 11);end if ((v227==2) or (((20311 -14044) -3190)>(3651 + 782))) then while true do if ((((4529 -(155 + 736)) -(124 + 1326))<=(3800 -(337 + 205))) and ((646 -(618 + 27))==v228)) then v231=nil;while true do if ((v229==((0 -0) -0)) or ((9377 -5810)==(9913 -(54 + 5894)))) then local v338=0 + 0;local v339;while true do if ((v338==((0 + 0) -0)) or ((3873 -1211)==(5471 -2754))) then v339=1526 -(840 + (2395 -1709));while true do if (((3523 -(640 + 33))<(5541 -(560 + 1247))) and (v339==(1 + 0))) then v229=1 -0;break;end if ((v339==(0 + 0)) or ((446 + 3604)<(9049 -6126))) then local v366=0 + 0;while true do if ((v366==(2 -1)) or ((9002 -5064)<(3252 -1743))) then v339=1 -(0 + 0);break;end if ((v366==(0 -(0 -0))) or ((825 + 372)==(23735 -18969))) then v230=v103[370 -(300 + 68)];v231=v101[v103[3 + 0]];v366=1;end end end end break;end end end if (((2828 -2065)<=(2219 -(786 + 427))) and (v229==(283 -(217 + (258 -193))))) then v101[v230 + (1876 -(1408 + 467))]=v231;v101[v230]=v231[v103[14 -10]];break;end end break;end if (((366 + 780)<(13837 -8954)) and (v228==(0 + 0))) then local v306=0 + 0;while true do if ((v306==(1564 -(491 + 1072))) or ((7 + 4157)==538)) then v228=1 + 0;break;end if (((2864 -1726)<=(1107 + 2441)) and (((5028 -3535) -(737 + 756))==v306)) then v229=0;v230=nil;v306=2 -1;end end end end break;end if (((10659 -5923)>(1425 + 415)) and (v227==(829 -(446 + 383)))) then v228=1242 -(1195 + 47);v229=nil;v227=1;end end else local v232=0 + 0 + 0;local v233;local v234;local v235;while true do if ((v232==((628 -(36 + 592)) -0)) or ((1842 -1085)>(4920 -(626 + 244)))) then v233=0 -0;v234=nil;v232=(2 -1) + 0;end if ((v232==(1 + 0)) or ((1194 + 1182)<=(2452 -1455))) then v235=nil;while true do if (((720 + 41)==(1578 -(477 + 340))) and (v233==((1140 -(37 + 448)) -(61 + 353 + 240)))) then for v318=v234 + (2 -1),v103[(39 + 221) -(142 + 115)] do v8(v235,v101[v318]);end break;end if (((1677 -781)<=(4949 -(844 + 239))) and (v233==(1292 -(908 + (1438 -1054))))) then local v307=0 -0;while true do if ((v307==(1 + 0)) or ((2666 -(577 + 367))>(8989 -4341))) then v233=2 -1;break;end if (((1910 + 403)<=(2706 -(266 + 111))) and (((697 -430) -(139 + 128))==v307)) then v234=v103[7 -5];v235=v101[v234];v307=(1187 -486) -(234 + 466);end end end end break;end end end elseif ((v104<=(236 -(193 + 15))) or ((5305 -3078)>(2145 + 1763))) then if ((((3210 -1385) -1273)<=(2108 -1018)) and (v104<=(1922 -((1385 -(1288 + 62)) + 1864)))) then if ((v104<=((1168 -(1076 + 24)) -48)) or (((12064 -4943) -5563)>=(20512 -16188))) then if ((v104>(638 -(369 + 250))) or ((672 + 3473)<=(602 -((704 -353) + 193)))) then do return v101[v103[2 + 0]];end else local v170=1005 -(810 + (533 -338));local v171;local v172;local v173;local v174;while true do if ((v170==(1 + 1)) or ((9412 -6066)>=(5786 -2048))) then while true do if (((5212 -(66 + 1309))>(568 + 2164)) and (v171==(3 -2))) then v174=v101[v172 + (5 -3)];if ((v174>(0 + 0)) or ((3594 -2406)>4185)) then if ((v173>v101[v172 + (582 -(260 + 47 + 274))]) or ((4487 -(133 + 196))<=(3523 -(1465 + 516)))) then v79=v103[550 -((758 -(342 + 120)) + 251)];else v101[v172 + (6 -3)]=v173;end elseif ((v173<v101[v172 + 1 + 0]) or ((1920 -874)>(11852 -8331))) then v79=v103[(2179 -955) -(68 + 1153)];else v101[v172 + 3 + 0]=v173;end break;end if (((1071 + 458)>(446 -187)) and (v171==(1587 -(1011 + 576)))) then v172=v103[3 -1];v173=v101[v172];v171=1 -0;end end break;end if ((v170==(128 -(80 + 47))) or ((560 -320)>(7367 -3818))) then v173=nil;v174=nil;v170=7 -5;end if ((v170==((505 + 152) -(344 + 313))) or ((533 -(208 + 127))>(4584 -2281))) then v171=1007 -(437 + (2222 -1652));v172=nil;v170=1 + 0;end end end elseif (((743 + 1714)<(3430 -(71 + 24))) and (v104<=(1050 -(751 + 278)))) then local v175=0 + 0;local v176;local v177;while true do if ((v175==(0 + 0)) or (46>=(5529 -(1221 + 353 + 108)))) then local v255=0 + 0;while true do if ((v255==(2 -1)) or ((289 -(60 + 172))>(5976 -3129))) then v175=1 -0;break;end if ((v255==(0 -(0 + 0))) or (((4999 -(266 + 419)) -((1353 -(158 + 591)) + 561))<(639 + 1798))) then v176=521 -((1005 -534) + 50);v177=nil;v255=(192 + 23) -(46 + 168);end end end if (((1270 + (278 -126))<=(7886 -5449)) and (v175==(3 -(1234 -(887 + 345))))) then while true do if (((6909 -3460)>=(3516 -(519 + (264 -145)))) and ((0 + 0)==v176)) then v177=v103[(2 + 2) -2];v101[v177]=v101[v177](v14(v101,v177 + 1 + 0,v80));break;end end break;end end elseif ((v104>(3 + 19)) or ((9040 -5475)<(2370 -(22 + 1843)))) then local v236=0 + 0;local v237;local v238;local v239;while true do if ((((1955 -(53 + 534)) + (13215 -9819))==(5147 -(49 + 4 + 330))) and (v236==(0 + 0 + 0))) then local v264=0 -0;while true do if (((754 -((1409 -(57 + 1335)) + 4))==((3144 -(121 + 318)) -((474 -169) + 1667))) and (v264==(1 + 0))) then v236=2 -1;break;end if (((432 + 2447)<(17587 -13334)) and (v264==(0 -0))) then v237=v103[270 -(150 + (347 -229))];v238=v101[v237 + (957 -(485 + 470))];v264=1 + 0;end end end if (((2327 + 890)==(9570 -6353)) and (v236==(1656 -(730 + (1924 -(327 + 672)))))) then local v265=904 -(729 + 175);while true do if ((v265==(501 -(345 + 155))) or (((48529 -33174) -12050)==(9216 -6056))) then v236=2 + 0;break;end if ((v265==(0 -0)) or (((62 -35) + 3902)<=(4610 -(589 + 185)))) then v239=v101[v237] + v238;v101[v237]=v239;v265=2 -1;end end end if (((7656 -4636)>=((1581 -(131 + 861)) + 408)) and (v236==(2 + 0))) then if ((v238>(0 + 0)) or ((12737 -8751)>=(5926 -(154 + 873)))) then if (((3785 -1920)==(586 + 1279)) and (v239<=v101[v237 + 1])) then local v319=0 + 0;local v320;while true do if ((v319==(0 -0)) or ((23436 -18697)>=(8435 -3575))) then v320=1890 -(545 + (3603 -2258));while true do if (((2473 + 210)<(13834 -8882)) and (v320==(869 -(566 + 303)))) then v79=v103[7 -4];v101[v237 + (714 -(199 + 512))]=v239;break;end end break;end end end elseif ((v239>=v101[v237 + (2 -(1799 -(1723 + 75)))]) or ((7074 -4642)>=((6055 -(661 + 927)) -(72 + 3)))) then local v321=0 + 0;while true do if (((104 -(75 + 29))==v321) or ((4228 -2812)>(4065 + 252))) then v79=v103[1043 -(85 + 81 + 874)];v101[v237 + (11 -8)]=v239;break;end end end break;end end else local v240=0 + 0;local v241;local v242;while true do if (((815 -(57 + 106))<(42 + 2076)) and (v240==(0 + 0))) then local v266=0 + 0;while true do if (((4542 -(500 + 704))==(4512 -(224 + 950))) and (v266==(0 + 0))) then v241=0 -0;v242=nil;v266=1 + 0;end if ((v266==(1 -0)) or ((3994 -1561)==(5537 -(742 + 552)))) then v240=1102 -(148 + 953);break;end end end if (((95 + 314)<=(2866 -(376 + 565 + 595))) and (v240==(1744 -(430 + (1323 -(5 + 5)))))) then while true do if (((2959 -(209 + 1243))<(5607 -((1706 -(905 + 732)) + 797))) and (v241==(956 -(479 + 477)))) then v242=v103[1098 -(176 + 410 + 510)];v101[v242]=v101[v242](v14(v101,v242 + 1 + 0,v103[2 + 1]));break;end end break;end end end elseif (((4026 -(1389 + 331))<=(4739 + 108)) and (v104<=(35 -10))) then if (((12882 -9429)>=(765 + 1209)) and (v104==(60 -36))) then if (((286 -180)<=(15580 -10704)) and (v103[2 + 0]<=v101[v103[792 -(105 + 683)]])) then v79=v79 + 1 + 0;else v79=v103[12 -9];end else v101[v103[5 -3]]=v39(v96[v103[(22 -15) -4]],nil,v43);end elseif ((v104<=(12 + 14)) or ((12173 -9117)>=(986 + 2950))) then v101[v103[2 -0]]=v101[v103[12 -9]];elseif ((v104==(25 + 2)) or ((4121 + 802)<=(1266 -(265 + 584)))) then v101[v103[1 + 1]][v101[v103[1 + 2]]]=v103[(1608 -(21 + 45)) -(367 + 1171)];elseif ((v103[9 -7]==v101[v103[162 -(137 + 21)]]) or ((1986 + 1056)>(2426 + 2036))) then v79=v79 + (856 -(852 + 3));else v79=v103[12 -9];end elseif ((v104<=(121 -88)) or ((2099 + (3559 -(279 + 485)))==3795)) then if ((v104<=(68 -38)) or ((6198 -(1033 + 311))<((9168 -5231) -(1116 + 730)))) then if ((v104==(4 + 25)) or ((170 + 326)==(9416 -5420))) then local v181=0 -0;local v182;local v183;local v184;while true do if (((3 -2)==v181) or (((11843 -(1372 + 445)) -6646)<(504 + 2488))) then v184=nil;while true do if (((2 -1)==v182) or ((1754 + 1789)==(1229 + 81))) then while true do if (((2109 + 20)<(11211 -(4940 + 2421))) and (v183==(1643 -((2490 -1464) + 617)))) then v184=v103[2 -0];v101[v184]=v101[v184]();break;end end break;end if (((3362 -(601 + 1304))<=(1832 + 2757)) and (v182==(0 -0))) then v183=(5487 -3802) -(693 + 992);v184=nil;v182=2 -1;end end break;end if (((1849 + 112)==(449 + 1512)) and (v181==(0 + 0))) then v182=291 -(28 + 263);v183=nil;v181=2 -(2 -1);end end else do return;end end elseif (((952 + 3610)>(8920 -5723)) and (v104<=(72 -(109 -68)))) then local v185=983 -(62 + 921);local v186;local v187;local v188;local v189;while true do if ((v185==(1 -0)) or ((4942 -3438)>=(5814 -(2356 -(263 + 685))))) then v188=nil;v189=nil;v185=(2680 -(549 + 893)) -(1217 + (499 -(379 + 101)));end if (((36 + 1028)<((4864 -(301 + 59)) -(1575 + 21))) and (v185==(1 + 1))) then while true do if ((v186==(0 + 0)) or ((11162 -8744)<=(117 + 804))) then local v278=0 + 0;while true do if (((0 -0)==v278) or ((5320 -(197 + 297))<=(3977 + 209))) then v187=v103[2 + 0];v188=v101[v187];v278=1 -0;end if (((2274 -(1054 + 169))<=(3469 -1879)) and (v278==(1 -0))) then v186=1249 -(372 + 876);break;end end end if ((v186==(1475 -(181 + 1293))) or ((2389 -(179 + 189))>(3868 -((477 -158) + 596)))) then v189=v103[5 -2];for v292=(666 -(634 + 30)) -1,v189 do v188[v292]=v101[v187 + v292];end break;end end break;end if ((v185==(669 -(385 + 274 + 10))) or ((5378 -(891 + 1056))<(3785 -(371 + 477)))) then v186=0 -(0 -0);v187=nil;v185=(1364 -(34 + 1329)) + 0;end end elseif ((v104>(1382 -(46 + 63 + 1241))) or ((5452 -(692 + (1605 -(426 + 555))))<(2483 -(328 + 1183)))) then local v246=0 -0;local v247;local v248;while true do if (((4558 -(77 + 30))>=(1609 -881)) and (v246==(1980 -(169 + 1810)))) then while true do if ((v247==(573 -(355 + 218))) or ((3115 -(223 + 483))>=(2115 + 2210))) then v248=v103[1604 -(1259 + 343)];v101[v248](v101[v248 + (280 -(68 + 211))]);break;end end break;end if (((4380 -(1604 + 304))>=((4204 -(282 + 4)) -((153 -88) + 1768))) and (v246==(1407 -(226 + 1181)))) then local v267=0;while true do if (((6074 -(16 + 1466))<(2773 + 2042)) and ((762 -(395 + 367))==v267)) then v247=0 -0;v248=nil;v267=1 + 0 + 0;end if ((v267==1) or ((1887 + 1291 + 124)<(946 + 1325))) then v246=3 -2;break;end end end end else v101[v103[2 -0]]=v43[v103[1572 -(581 + 988)]];end elseif ((v104<=(922 -(545 + (1322 -(709 + 271))))) or ((79 -60)>(90 + 2682))) then if (((2228 -1511)<4498) and (v104>(462 -(87 + 244 + 97)))) then local v190=0 + 0;local v191;local v192;while true do if ((v190==(433 -(276 + 157))) or ((8095 -5151)>=(2627 + 1542))) then local v256=0 + 0;while true do if ((1505<=(1450 + 2312)) and ((2 -(1 + 0))==v256)) then v190=1 + 0 + 0 + 0;break;end if ((v256==(185 -(68 + 117))) or ((1177 + 225)>(4178 -((620 -146) + 890)))) then v191=(4101 -2703) -(57 + 1341);v192=nil;v256=1014 -(28 + 985);end end end if (((1252 + 2441)>=(508 -(323 + 167))) and (v190==(1812 -(794 + 1017)))) then while true do if ((v191==(760 -(234 + 526))) or ((4110 -(768 + 857))<(2951 -(5103 -3286)))) then v192=v103[3 -(1 + 0)];v101[v192](v14(v101,v192 + 1 + 0,v80));break;end end break;end end else v101[v103[2 -0]]=v103[8 -5]~=(0 + 0);end elseif ((v104<=(25 + 11)) or (2220>(1352 + (6803 -3882)))) then local v194=0 + 0;local v195;local v196;local v197;local v198;local v199;while true do if (((758 + 480)<=4097) and (v194==(0 + 0))) then local v257=303 -(5 + 298);while true do if (((1271 -(42 + 1))<(14236 -10966)) and (v257==((2814 -2065) -(535 + 213)))) then v194=1 + 0;break;end if (((158 + 440)<=((4089 -(43 + 1394)) -1678)) and (v257==(1399 -(1038 + 361)))) then v195=353 -(155 + 198);v196=nil;v257=1 -(0 -0);end end end if (((1556 -(598 + 956))==v194) or ((2627 + 603)==(8339 -5348))) then v199=nil;while true do if (((1790 + 2481)>(2281 + 115)) and (v195==(0 + (0 -0)))) then local v281=1603 -(534 + 1069);while true do if ((v281==(0 -0)) or ((714 + 1754)==(7545 -4722))) then v196=v103[4 -2];v197,v198=v98(v101[v196](v14(v101,v196 + (1280 -(105 + 75 + 1099)),v103[1871 -(1630 + 238)])));v281=715 -(525 + 189);end if (((3395 -(263 + 19))<(2838 + 400)) and (v281==(1712 -(1672 + 39)))) then v195=1762 -(442 + 1319);break;end end end if (((29 + 96)<=(852 + 1067)) and ((1021 -(878 + 141))==v195)) then for v295=v196,v80 do local v296=833 -(739 + 94);local v297;local v298;while true do if ((v296==(1 + 0)) or ((1930 + 318)<(1329 -(212 + 354)))) then while true do if (((1998 -1267)<=(14399 -9777)) and (v297==((4076 -2791) -(1018 + 267)))) then v298=1207 -(724 + 483);while true do if (((13251 -8737)>=(2040 -(816 + 686))) and (v298==((0 + 0) -0))) then v199=v199 + ((24 + 617) -(506 + 134));v101[v295]=v197[v199];break;end end break;end end break;end if (((0 -0)==v296) or ((152 + 1022)>=((1771 + 4137) -(270 + 1696)))) then v297=0 -0;v298=nil;v296=1;end end end break;end if ((v195==(1 + 0)) or ((8028 -4120)<(56 + 669))) then local v282=975 -(90 + 885);local v283;while true do if (((1986 + 425)>=(4799 -3285)) and (v282==(0 -0))) then v283=0 -0;while true do if ((v283==(437 -(48 + (1851 -(593 + 869))))) or ((5413 -(173 + 249))<=(9636 -6270))) then local v351=0 -0;while true do if (((5251 -2006)>=(2151 -852)) and (v351==(1128 -(269 + (2293 -(1161 + 273)))))) then v80=(v198 + v196) -(305 -(9 + (1412 -(690 + 427))));v199=1930 -(1432 + (1374 -876));v351=1 -0;end if (((8949 -5433)>=(928 + 120)) and (v351==(1 -0))) then v283=1888 -(371 + 1516);break;end end end if ((v283==(1 + 0)) or ((3759 + 1214)<(3434 -(70 + 906)))) then v195=202 -(92 + 108);break;end end break;end end end end break;end if ((v194==(2 -1)) or ((3093 + 1259)==(10430 -6086))) then local v258=196 -(35 + 161);while true do if (((2333 -(421 + 178))>=((2729 -(187 + 178)) -(139 + 1272))) and (v258==(1 + 0))) then v194=8 -6;break;end if ((v258==(0 + 0)) or ((78 + 75)>(4397 -((262 -(89 + 123)) + 117)))) then v197=nil;v198=nil;v258=1 + 0 + 0;end end end end elseif ((v104==(841 -((1658 -(754 + 102)) + 2))) or ((1385 + (1477 -(574 + 371)))>=(9140 -6574))) then v101[v103[9 -7]][v103[3]]=v101[v103[1 + 3]];else v101[v103[(4 -3) + 1]][v103[1947 -(952 + 992)]]=v103[11 -7];end v79=v79 + (1800 -(768 + 1031));break;end if ((v107==(1757 -(383 + 1374))) or ((3400 + 156)==(4489 -(31 + 470)))) then local v132=0 -0;local v133;while true do if ((3805>=835) and (v132==(0 + 0))) then v133=1407 -(1310 + 97);while true do if (((3360 -(972 + 837))<(6387 -(3925 -(25 + 70)))) and (v133==(0 -0))) then v103=v95[v79];v104=v103[(757 -(83 + 673)) + 0];v133=3 -2;end if ((v133==(1 + 0)) or (((1550 + 2195) -((547 -(96 + 71)) + 112))<=(2400 -600))) then v107=1 + 0;break;end end break;end end end end break;end end end end;v78=3;end if (v78==0) then v79=1;v80= -1;v78=1;end if (v78==1) then v81={...};v82=v13("#",...) -1;v78=2;end if (v78==3) then A,B=v37(v12(v83));if  not A[1] then local v108=0;local v109;while true do if (v108==0) then v109=v41[4][v79] or "?";error("Script error at ["   .. v109   .. "]:"   .. A[2]);break;end end else return v14(A,2,B);end break;end end end;end;return v39(v38(),{},v23)(...);end if (v27==0) then v28=1;v29=nil;v22=v5(v4(v22,5),"..",function(v44)if (v2(v44,2)==79) then v29=v1(v4(v44,1,1));return "";else local v85=v3(v1(v44,16));if v29 then local v92=0;local v93;while true do if (v92==1) then return v93;end if (v92==0) then v93=v6(v85,v29);v29=nil;v92=1;end end else return v85;end end end);v27=1;end if (v27==2) then v31=function()local v61=0 + 0 + 0;local v62;while true do if ((0 -0)==v61) then v62=v2(v22,v28,v28);v28=v28 + (1 -0);v61=1;end if (((399 + 610) -(595 + 413))==v61) then return v62;end end end;v32=nil;v32=function()local v63=(125 -34) -((51 -36) + 76);local v64;local v65;while true do if (v63==(0 -(962 -(485 + 477)))) then v64,v65=v2(v22,v28,v28 + (743 -(666 + 75)));v28=v28 + (657 -(502 + 153));v63=329 -(87 + 241);end if (v63==(1386 -(432 + 953))) then return (v65 * (155 + 101)) + v64;end end end;v27=3;end if (v27==3) then v33=nil;v33=function()local v66=0 -0;local v67;local v68;local v69;local v70;while true do if (v66==(1 + 0)) then return (v70 * ((41335009 -(433 + 19)) -(74047696 -49490355))) + (v69 * (66625 -(1010 + 79))) + (v68 * ((1188 -679) -(190 + 63))) + v67;end if ((0 -0)==v66) then v67,v68,v69,v70=v2(v22,v28,v28 + 1 + 2);v28=v28 + (339 -(327 + 8));v66=3 -2;end end end;v34=nil;v27=4;end if (v27==6) then v38=nil;v38=function()local v71=0;local v72;local v73;local v74;local v75;local v76;local v77;while true do local v84=0;while true do if (v84~=(461 -(144 + 316))) then else if (v71==0) then local v110=0;local v111;while true do if ((0 + 0)==v110) then v111=0 -0;while true do if (v111==(0 -0)) then v72={};v73={};v111=1 + 0;end if (v111==(1 -0)) then v74={};v71=1;break;end end break;end end end if (v71==3) then for v114=897 -(607 + 289),v33() do v73[v114-(974 -(381 + 592))]=v38();end for v116=2 -1,v33() do v74[v116]=v33();end return v75;end break;end if (v84~=0) then else if ((2 -1)==v71) then local v112=0 -0;while true do if (v112==0) then v75={v72,v73,nil,v74};v76=v33();v112=2 -1;end if (v112==1) then v77={};v71=94 -(73 + 19);break;end end end if (v71==(2 + 0)) then for v118=2 -1,v76 do local v119=0 -0;local v120;local v121;local v122;local v123;while true do if (v119~=(1424 -(782 + 641))) then else v122=nil;v123=nil;v119=2;end if (v119==0) then v120=0 -0;v121=nil;v119=1;end if (v119~=2) then else while true do if (v120~=0) then else v121=0;v122=nil;v120=1 + 0;end if (v120==(1 + 0)) then v123=nil;while true do if (v121==0) then local v139=0 + 0;while true do if (v139~=(1 + 0)) then else v121=1;break;end if ((0 -0)~=v139) then else v122=v31();v123=nil;v139=4 -3;end end end if (v121~=1) then else if (v122==(2 -1)) then v123=v31()~=0;elseif (v122==(2 -0)) then v123=v34();elseif (v122~=(7 -4)) then else v123=v35();end v77[v118]=v123;break;end end break;end end break;end end end v75[3]=v31();for v124=3 -2,v33() do local v125=0;local v126;local v127;while true do if (v125~=(1578 -(1318 + 260))) then else v126=290 -(151 + 139);v127=nil;v125=90 -(22 + 67);end if (v125==(1 -0)) then while true do if ((1938 -(32 + 1906))==v126) then v127=v31();if (v30(v127,137 -(45 + 91),1625 -(102 + 1522))==0) then local v134=0;local v135;local v136;local v137;local v138;while true do if ((1 + 1)==v134) then while true do if ((3 + 0)==v135) then if (v30(v137,3,3)~=1) then else v138[1193 -(679 + 510)]=v77[v138[4]];end v72[v124]=v138;break;end if (v135==(1549 -(340 + 1208))) then local v145=0;while true do if (v145==0) then v138={v32(),v32(),nil,nil};if (v136==(655 -(99 + 556))) then local v260=0 -0;local v261;local v262;while true do if (v260==(2 -1)) then while true do if (v261~=(0 + 0)) then else v262=0;while true do if ((0 -0)~=v262) then else v138[3]=v32();v138[15 -11]=v32();break;end end break;end end break;end if (v260==(0 + 0)) then v261=0 -0;v262=nil;v260=1;end end elseif (v136==1) then v138[1 + 2]=v33();elseif (v136==2) then v138[7 -4]=v33() -(2^16);elseif (v136==(3 + 0)) then local v331=0;local v332;while true do if (v331==0) then v332=0;while true do if (v332==(0 + 0)) then v138[11 -8]=v33() -(2^(1642 -(105 + 1521)));v138[1 + 3]=v32();break;end end break;end end end v145=1;end if (1==v145) then v135=2;break;end end end if (v135~=2) then else if (v30(v137,1 + 0,1 -0)~=(2 -1)) then else v138[892 -(678 + 212)]=v77[v138[944 -(495 + 447)]];end if (v30(v137,2 + 0,5 -3)~=1) then else v138[3 + 0]=v77[v138[3 + 0]];end v135=1226 -(553 + 670);end if (v135==0) then local v146=0;while true do if (v146==(639 -(488 + 150))) then v135=1;break;end if (v146==(1553 -(853 + 700))) then v136=v30(v127,1 + 1,1 + 2);v137=v30(v127,1402 -(1062 + 336),6);v146=1;end end end end break;end if (v134==(2 -1)) then local v143=0;while true do if (v143==0) then v137=nil;v138=nil;v143=1;end if (v143==1) then v134=2;break;end end end if (v134~=(1146 -(142 + 1004))) then else v135=0;v136=nil;v134=3 -2;end end end break;end end break;end end end v71=2 + 1;end v84=1;end end end end;v39=nil;v27=7;end if (v27==5) then v36=v33;v37=nil;v37=function(...)return {...},v13("#",...);end;v27=6;end if (v27==1) then v30=nil;v30=function(v45,v46,v47)if v47 then local v86=0 + 0;local v87;while true do if (v86==(0 + 0)) then v87=(v45/((479 -(465 + 12))^(v46-(1 + 0))))%((8 -(16 -10))^(((v47-(2 -1)) -(v46-((3 -2) + 0))) + (1755 -((3850 -2275) + 179))));return v87-(v87%(604 -(295 + (1218 -(685 + 225)))));end end else local v88=236 -(196 + 40);local v89;while true do if (v88==(0 -0)) then v89=(1800 -((2077 -(426 + 164)) + 311))^(v46-(1 + (1169 -(472 + 697))));return (((v45%(v89 + v89))>=v89) and (1 -0)) or 0;end end end end;v31=nil;v27=2;end end end;vv10(),...);break;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end end end